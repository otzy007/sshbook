#!/usr/bin/env ruby

################################################################################
#  The MIT License (MIT)
#
# Copyright (c) 2012 - 2015 Andrei Gliga
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
################################################################################

# SSH address book ;)
require 'yaml'
require 'optparse'

$HOSTS_FILE = "~/.sshbook.yml"

$hosts = YAML.load(File.read(File.expand_path($HOSTS_FILE)))

def available_hosts
  puts "Available hosts"
  $hosts.each {|host| puts "* " + host[0]}
end

class Actions
  # Delete a connection by it's name
  def delete(server_alias)
    if $hosts.delete server_alias
      save
    else
      puts "No such host\n\n"
      available_hosts
      exit 1
    end
  end

  def connect(s_alias, cmd)
    p s_alias
    p cmd
    host = $hosts[s_alias]

    unless host
      puts "sshbook: No such host " +  s_alias + "\n\n"
      available_hosts
      exit 1
    end

    if host['host']
      address = String.new
      address = host['user'] + '@' if host['user']
      address += host['host']
    elsif host['script']
      # get the ip as a result of a script
      address = eval host['script']
    end

    command= cmd ? cmd : host['command']

    puts "Connecting to " + address + " #{command}"
    exec("ssh #{host['options'] if host['options']} #{address} #{command}")
  end

  def transfer
    unless ARGV[0] && ARGV[1]
      puts "Usage sshbook -t [-r] [host]:file [host][:file]"
      exit 1
    end

    puts "scp #{expand ARGV[0]} #{expand ARGV[1]} #{expand ARGV[2] if ARGV[2]}"
    exec "scp #{expand ARGV[0]} #{expand ARGV[1]} #{expand ARGV[2] if ARGV[2]}"
  end

private
  def save
    file = File.open(File.expand_path($HOSTS_FILE), 'w')
    file.write($hosts.to_yaml)
  end

  def expand(host_and_file)
    if $hosts[host_and_file]
      host = $hosts[host_and_file]['user'] + '@'
      host += $hosts[host_and_file]['host'] || eval($hosts[host_and_file]['script'])
      host += ':~'
    elsif $hosts[host_and_file.split(':')[0]]
      host = $hosts[host_and_file.split(':')[0]]['user'] + '@'
      host += $hosts[host_and_file.split(':')[0]]['host'] || eval($hosts[host_and_file.split(':')[0]]['script'])
      file = host_and_file.split(':')[1]

      host + ':' + file
    else
      host_and_file
    end
  end
end

if $0 == __FILE__
  ARGV.options do |opts|
    opts.on('-v', '--version', 'Show the version') do
      puts "sshbook 0.3.2\n\nCopyright (c) 2012 - 2015 Andrei Gliga\n"
      puts "sshbook is licensed under the MIT License. See LICENSE.md for details."
      exit
    end
    opts.on('-l', '--list', 'List the servers') { available_hosts and exit }
    opts.on('-d', '--delete ALIAS', String, 'Delete the server with the ALIAS') do |server_alias|
      Actions.new.delete(server_alias)
      exit
    end
    opts.on('-t', '--transfer') do
      Actions.new.transfer
      exit
    end

    opts.parse!
  end

  Actions.new.connect(ARGV[0], ARGV[1])
end
